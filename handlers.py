from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import CallbackContext
from database import get_all_genres, get_all_years, get_movies, get_popular_queries, save_search_query
from utils import log_info, format_movie_info


def get_start_keyboard():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–°—Ç–∞—Ä—Ç'."""
    return ReplyKeyboardMarkup([['–°—Ç–∞—Ä—Ç']], resize_keyboard=True)


async def start(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞ –≤ –±–æ—Ç–∞."""
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–°—Ç–∞—Ä—Ç', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º.",
        reply_markup=get_start_keyboard()
    )


async def handle_start_press(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–°—Ç–∞—Ä—Ç' –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –º–µ–Ω—é."""
    await show_menu(update, context)


async def show_menu(update: Update, context: CallbackContext):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–∏."""
    keyboard = [
        [InlineKeyboardButton("üé≠ –ù–∞–π—Ç–∏ –ø–æ –∂–∞–Ω—Ä—É", callback_data="choose_genre")],
        [InlineKeyboardButton("üìÖ –ù–∞–π—Ç–∏ –ø–æ –≥–æ–¥—É", callback_data="choose_year")],
        [InlineKeyboardButton("üé¨ –ù–∞–π—Ç–∏ –ø–æ –∞–∫—Ç–µ—Ä—É", callback_data="choose_actor")],
        [InlineKeyboardButton("üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã", callback_data="popular_queries")],
        [InlineKeyboardButton("‚ùå –ó–∞–∫–æ–Ω—á–∏—Ç—å —Ä–∞–±–æ—Ç—É", callback_data="stop")]
    ]

    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )


async def genre_choice(update: Update, context: CallbackContext):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∂–∞–Ω—Ä–æ–≤."""
    genres = get_all_genres()
    if not genres:
        await update.callback_query.message.reply_text("–ñ–∞–Ω—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    keyboard = [[InlineKeyboardButton(genre, callback_data=f"genre_{genre}")] for genre in genres]
    await update.callback_query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä:", reply_markup=InlineKeyboardMarkup(keyboard))

async def handle_genre(update: Update, context: CallbackContext):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∂–∞–Ω—Ä—É."""
    genre = update.callback_query.data.split('_')[1]
    context.user_data.update({'genre': genre, 'offset': 0})

    user_id = update.effective_user.id
    log_info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª –∂–∞–Ω—Ä: {genre}")

    save_search_query(f"–ñ–∞–Ω—Ä: {genre}")
    movies = get_movies(genre=genre, offset=0)

    if not movies:
        await update.callback_query.message.reply_text(f"–§–∏–ª—å–º—ã –≤ –∂–∞–Ω—Ä–µ {genre} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
    else:
        text = "\n\n".join([format_movie_info(movie) for movie in movies])
        await update.callback_query.message.reply_text(text, parse_mode="Markdown")

    await show_menu(update, context)

async def year_choice(update: Update, context: CallbackContext):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≥–æ–¥–æ–≤."""
    years = get_all_years()
    if not years:
        await update.callback_query.message.reply_text("–ì–æ–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    keyboard = [[InlineKeyboardButton(str(year['release_year']), callback_data=f"year_{year['release_year']}")] for year in years]
    await update.callback_query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥:", reply_markup=InlineKeyboardMarkup(keyboard))

async def handle_year(update: Update, context: CallbackContext):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –≥–æ–¥—É."""
    year = update.callback_query.data.split('_')[1]
    context.user_data.update({'year': year, 'offset': 0})

    user_id = update.effective_user.id
    log_info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª –≥–æ–¥: {year}")

    save_search_query(f"–ì–æ–¥: {year}")
    movies = get_movies(year=year, offset=0)

    if not movies:
        await update.callback_query.message.reply_text(f"–§–∏–ª—å–º—ã –∑–∞ {year} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
    else:
        text = "\n\n".join([format_movie_info(movie) for movie in movies])
        await update.callback_query.message.reply_text(text, parse_mode="Markdown")

    await show_menu(update, context)

async def actor_choice(update: Update, context: CallbackContext):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤–≤–æ–¥ –∏–º–µ–Ω–∏ –∞–∫—Ç–µ—Ä–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π –æ —è–∑—ã–∫–µ."""
    await update.callback_query.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∞–∫—Ç–µ—Ä–∞ –Ω–∞ *–∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ* (–Ω–∞–ø—Ä–∏–º–µ—Ä, `Tom Hanks`).",
        parse_mode="Markdown"
    )

async def handle_actor(update: Update, context: CallbackContext):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–º—É –∞–∫—Ç–µ—Ä—É."""
    actor_name = update.message.text
    context.user_data.update({'actor_name': actor_name, 'offset': 0})

    user_id = update.effective_user.id
    log_info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∏—â–µ—Ç —Ñ–∏–ª—å–º—ã —Å –∞–∫—Ç–µ—Ä–æ–º: {actor_name}")

    save_search_query(f"–ê–∫—Ç–µ—Ä: {actor_name}")
    movies = get_movies(actor_name=actor_name, offset=0)

    if not movies:
        await update.message.reply_text(f"–§–∏–ª—å–º—ã —Å –∞–∫—Ç–µ—Ä–æ–º {actor_name} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
    else:
        text = "\n\n".join([format_movie_info(movie) for movie in movies])
        await update.message.reply_text(text, parse_mode="Markdown")

    await show_menu(update, context)

async def more_movies(update: Update, context: CallbackContext):
    """–í—ã–≤–æ–¥–∏—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∏–ª—å–º—ã."""
    context.user_data['offset'] += 10
    genre, year, actor_name = context.user_data.get('genre'), context.user_data.get('year'), context.user_data.get('actor_name')

    movies = get_movies(genre=genre, year=year, actor_name=actor_name, offset=context.user_data['offset'])

    if not movies:
        await update.callback_query.message.reply_text("–ë–æ–ª—å—à–µ —Ñ–∏–ª—å–º–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    else:
        text = "\n\n".join([format_movie_info(movie) for movie in movies])
        await update.callback_query.message.reply_text(text, parse_mode="Markdown")

    await show_menu(update, context)

async def popular_queries(update: Update, context: CallbackContext):
    """–í—ã–≤–æ–¥–∏—Ç –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã."""
    user_id = update.effective_user.id
    log_info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–æ–∏—Å–∫–∏")

    queries = get_popular_queries()

    if not queries:
        await update.callback_query.message.reply_text("–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
    else:
        text = "üî• *–°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã:*\n\n" + "\n".join(
            [f"üîπ {i + 1}. `{query['query']}` (üîç {query['count']} —Ä–∞–∑)" for i, query in enumerate(queries)]
        )
        await update.callback_query.message.reply_text(text, parse_mode="Markdown")

    await show_menu(update, context)

async def stop_bot(update: Update, context: CallbackContext):
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ."""
    query = update.callback_query
    await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏

    # –£–±–∏—Ä–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ (—á—Ç–æ–±—ã –Ω–µ –≤–∏—Å–µ–ª–∏ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è "–ó–∞–∫–æ–Ω—á–∏—Ç—å —Ä–∞–±–æ—Ç—É")
    await query.message.edit_reply_markup(reply_markup=None)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await query.message.reply_text("‚ùå –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É. –î–æ –≤—Å—Ç—Ä–µ—á–∏! üëã")

async def handle_greeting(update: Update, context: CallbackContext):
    """–û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –º–µ–Ω—é."""
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å '–°—Ç–∞—Ä—Ç' –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞.")

